# -----------------------
# Detritus macOS Makefile (SDL2, arm64)
# -----------------------

VERSION      := 1.0.7
EXECUTABLE   := detritus
APP          := Detritus.app
APP_CONTENTS := $(APP)/Contents
APP_MACOS    := $(APP_CONTENTS)/MacOS
APP_FRAME    := $(APP_CONTENTS)/Frameworks

BREW_PREFIX  := /opt/homebrew
PKG_ENV      := PKG_CONFIG_PATH=$(BREW_PREFIX)/lib/pkgconfig
ARCHS        := arm64
DMG_NAME     := Detritus-$(VERSION).dmg

CPP_SOURCES := $(wildcard src/*.cpp)
BUILD_ARM   := build_arm64

# FANCIER, LATER
#CFLAGS  = -Wall -Isrc -DOSX -Os \
#          $(shell $(PKG_ENV) pkg-config --cflags sdl3 sdl3-image sdl3-ttf) \
#          -Wno-deprecated-declarations
#
#LDFLAGS = $(shell $(PKG_ENV) pkg-config --libs sdl3 sdl3-image sdl3-ttf) \
#          -lsqlite3 \
#          -framework OpenGL \
#          -framework OpenAL \
#          -framework CoreData \
#          -framework Cocoa \
#          -Wl,-rpath,@executable_path/../Frameworks

# FOR NOW!!!!!
CFLAGS=-Wno-deprecated -W -Isrc -DOSX -Os -I/opt/homebrew/include -I /Users/kaolin/dev/0tools/SDK/sysroot/System/Library/Frameworks/OpenAL.framework/Headers
LDFLAGS=-framework Carbon -framework IOKit -framework ApplicationServices -framework Cocoa -L /opt/homebrew/lib -lSDLmain -lSDL2 -lSDL2_ttf -lSDL2_image -lsqlite3 -framework OpenGL -framework OpenAL -gfull -framework CoreData

# -----------------------
# Build & bundle
# -----------------------
all: bundle
	@echo "==> Portable DMG ready: $(DMG_NAME)"

bundle: $(APP)
$(APP): build
	@echo "==> Copying into .app bundle..."
	mkdir -p $(APP_MACOS) $(APP_FRAME)
	cp -f $(BUILD_ARM)/$(EXECUTABLE) $(APP_MACOS)/
	#dylibbundler -ns -of -od -b -x Detritus.app/Contents/MacOS/detritus -d Detritus.app/Contents/Frameworks/ -p @executable_path/../Frameworks/
	#install_name_tool -delete_rpath @executable_path/../Frameworks/ /Users/kaolin/dev/0archive/detritus/Detritus.app/Contents/MacOS/Detritus

#-x Detritus.app/Contents/MacOS/Detritus -d Detritus.app/Contents/Frameworks/ -p @executable_path/../Frameworks/

	#@echo "==> Codesigning..."
	#codesign --force --options runtime --deep --sign "Developer ID Application: Kaolin Fire (TP8P64EJ78)" $(APP)

	#@echo "==> Creating DMG..."
	#rm -rf distribute
	#mkdir -p distribute
	#ln -s /Applications distribute/Applications
	#rsync -avp $(APP)/ distribute/$(APP)/
	#hdiutil create -volname "Detritus" -srcfolder ./distribute -ov $(DMG_NAME)

build:
	@echo "==> Building arm64 binary..."
	mkdir -p $(BUILD_ARM)
	clang++ $(CFLAGS) -arch arm64 $(CPP_SOURCES) $(LDFLAGS) -o $(BUILD_ARM)/$(EXECUTABLE)

clean:
	rm -rf build_x86_64 build_arm64 src/*.o core $(EXECUTABLE) distribute $(APP) $(DMG_NAME)

distclean: clean

.PHONY: all bundle build clean distclean
